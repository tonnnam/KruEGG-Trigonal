import streamlit as st
import math
import random

st.set_page_config(page_title="Triangle Trig Game", page_icon="üéØ")

# ---------------------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏à‡∏ó‡∏¢‡πå ----------------------
def ask_basic_trig():
    funcs = ["sin", "cos", "tan"]
    func = random.choice(funcs)
    angles = [15, 30, 45, 60, 75, 90, 120]
    angle = random.choice(angles)

    if func == "sin":
        correct = round(math.sin(math.radians(angle)), 3)
    elif func == "cos":
        correct = round(math.cos(math.radians(angle)), 3)
    else:
        correct = round(math.tan(math.radians(angle)), 3)

    return f"‡∏´‡∏≤ {func}({angle}¬∞) (‡∏ï‡∏≠‡∏ö‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° 3 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á)", correct


def ask_law_of_sines():
    A = random.choice([30, 45, 60])
    B = random.choice([60, 75, 45])
    a = random.randint(5, 15)
    b = round(a * math.sin(math.radians(B)) / math.sin(math.radians(A)), 2)

    return f"‡πÉ‡∏´‡πâ A = {A}¬∞, B = {B}¬∞, a = {a}\n‡∏à‡∏á‡∏´‡∏≤ b (‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° 2 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á)", b


def ask_law_of_cosines():
    a = random.randint(5, 12)
    b = random.randint(5, 12)
    C = random.choice([30, 60, 90, 120])
    c = round(math.sqrt(a**2 + b**2 - 2*a*b*math.cos(math.radians(C))), 2)

    return f"‡πÉ‡∏´‡πâ a = {a}, b = {b}, C = {C}¬∞\n‡∏à‡∏á‡∏´‡∏≤ c (‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏° 2 ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á)", c


# ---------------------- Init Session ----------------------
if "level" not in st.session_state:
    st.session_state.level = 1
    st.session_state.score = 0
    st.session_state.question, st.session_state.answer = ask_basic_trig()
    st.session_state.feedback = ""


# ---------------------- UI ----------------------
st.title("üéØ Triangle Trig Game")
st.write(f"**‡∏î‡πà‡∏≤‡∏ô {st.session_state.level}** | ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: {st.session_state.score}")

st.write("‡πÇ‡∏à‡∏ó‡∏¢‡πå:")
st.code(st.session_state.question)

# ‡πÉ‡∏ä‡πâ st.form ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Å‡∏î Submit ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡∏ï‡∏£‡∏ß‡∏à
with st.form(key="answer_form"):
    user_input = st.text_input("‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:")
    submitted = st.form_submit_button("‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö")

if submitted:
    try:
        ans = float(user_input)
        correct = st.session_state.answer

        if abs(ans - correct) < 0.05:
            st.session_state.feedback = "‚úÖ ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!"
            st.session_state.score += 1
            st.session_state.level += 1

            # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏ï‡∏≤‡∏° level
            if st.session_state.level <= 10:
                st.session_state.question, st.session_state.answer = ask_basic_trig()
            elif st.session_state.level <= 20:
                st.session_state.question, st.session_state.answer = ask_law_of_sines()
            else:
                st.session_state.question, st.session_state.answer = ask_law_of_cosines()
        else:
            st.session_state.feedback = f"‚ùå ‡∏ú‡∏¥‡∏î! ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏∑‡∏≠ {correct}\n‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏î‡πà‡∏≤‡∏ô 1"
            st.session_state.level = 1
            st.session_state.score = 0
            st.session_state.question, st.session_state.answer = ask_basic_trig()
    except:
        st.session_state.feedback = "‚ö†Ô∏è ‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à
if st.session_state.feedback:
    st.info(st.session_state.feedback)
